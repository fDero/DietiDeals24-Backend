package repository;

import entity.Auction;
import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.domain.Pageable;

import java.sql.Timestamp;
import org.springframework.stereotype.Repository;


@Repository
public interface AuctionRepository extends JpaRepository<Auction, Integer> {

        /* the implementation of this interface gets auto-generated by Hibernate          */
        /* to create a repository, use the spring-boot injection techniques to generate   */
        /* an object of type 'Auction' such as using @Autowired annotations               */
        /* on class internal fields and use them as if they were implemented. Hibernate   */
        /* will generate the code for you and database access functionalities will be     */
        /* provided to you. Please read the spring-boot wiki to understand better         */

        Optional<Auction> findById(Integer id);

        List<Auction> findAllByEndTimeAfterOrderByEndTimeAsc(Timestamp currentTime, Pageable pageable);

        List<Auction> findAllByEndTimeAfterAndItemCategoryContainingAndItemNameContainingAndMacroCategoryContainingAndAuctionTypeContainingOrderByEndTimeAsc(
                Timestamp currentTime, String itemCategory, String itemName, 
                String auctionType, String macroCategory, Pageable pageable
        );

        List<Auction> findAllByEndTimeAfterAndItemCategoryContainingAndItemNameContainingAndMacroCategoryContainingAndAuctionTypeContainingOrderByNumberOfBidsDesc(
                Timestamp currentTime, String itemCategory, String itemName, 
                String auctionType, String macroCategory, Pageable pageable
        );

        default List<Auction> findActiveAuctionsFilteredExpiration(
                String itemCategory, String searchString, 
                String auctionType, String macroCategory, 
                Pageable pageable
        ) {
                return findAllByEndTimeAfterAndItemCategoryContainingAndItemNameContainingAndMacroCategoryContainingAndAuctionTypeContainingOrderByEndTimeAsc(
                        new Timestamp(System.currentTimeMillis()), itemCategory, searchString, auctionType, macroCategory, pageable
                );
        };

        default List<Auction> findActiveAuctionsFilteredTrending(
                String itemCategory, String searchString, 
                String auctionType, String macroCategory, 
                Pageable pageable
        ) {
                return findAllByEndTimeAfterAndItemCategoryContainingAndItemNameContainingAndMacroCategoryContainingAndAuctionTypeContainingOrderByNumberOfBidsDesc(
                        new Timestamp(System.currentTimeMillis()), itemCategory, searchString, auctionType, macroCategory, pageable
                );
        };
}
